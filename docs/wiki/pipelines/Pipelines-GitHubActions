# GitHub Actions Pipeline

The following instructions detail how to set up GitHub Actions for a customer site deployment.

## Create Service Principal(s)

See [prerequisites](../deployments/Deployments-pre-deploy.md) to create the necessary Service Principal(s).

## Adding Variables to GitHub repository

Create the following `Repository` level variables.

| Variable name       | Variable context                                                 |
| ------------------- | ---------------------------------------------------------------- |
| LOCATION            | The suitable Azure region to run this from. E.g. `australiaeast` |
| MANAGEMENT_GROUP_ID | The management group id to deploy into. E.g. `mg-alz`            |

## Adding Secrets to GitHub repository

Create the following `Repository` level secrets.

| Secret name            | Secret context                                                                                                                                                               |
| ---------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| AZURE_CLIENT_ID        | The client Id of the Service Principal created as part of the [prerequisites](../deployments/Deployments-pre-deploy.md)                                                      |
| AZURE_CLIENT_SECRET    | The client secret of the Service Principal created as part of the [prerequisites](../deployments/Deployments-pre-deploy.md). Do not create this value if you are using OIDC. |
| AZURE_SUBSCRIPTION_ID` | The subscription Id the service principal has visibility of.                                                                                                                 |
| AZURE_TENANT_ID        | The Microsoft Entra Tenant Id associated with the subscription                                                                                                               |

To create these secrets, execute the following steps:

1. On GitHub, navigate to the main page of the repository.
2. Under your repository name, click on the **Settings** tab.
3. In the left sidebar, click **Secrets**.
4. Click **New repository secret**.
5. Type the name as above for your secret in the Name input box.
6. Enter the secret value in the larger text box. Be mindful of any carriage returns!
7. Click **Add secret**.

> **Note:**
> Environmental level secrets are not supported for caller workflows. Please use repository secrets only.

### Using different credentials for each environment or vending machine

If you are using different credentials for each environment, simply append the `suffix` of the environment to the `AZURE_CLIENT_X` values. E.g. `AZURE_CLIENT_ID_DEV` or `AZURE_CLIENT_ID_SAP`.

Then ensure you have updated the `release.yml` file with the necessary suffix.

## Logical Implementation

If you need additional environments, follow these steps:

1. Make a copy of the `deploy_X` code block in `release.yaml`.
2. Update the `environmentName` and `templateParameterFile` for each environment.

If creating multiple landing zones, such as one for Data and another for SAP, complete the following:

1. Make a copy of the `release.yaml` file (e.g., `release_SAP.yaml`) for each landing zone subscription vending.
2. Complete the steps above if your need multiple environments.

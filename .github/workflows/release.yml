---
name: Release

on:
  push:
    branches:
      - main
  workflow_dispatch: {}

env:
  PSRULE_DIRECTORY: ./
  INFRA_WORKING_DIRECTORY: ./

jobs:
  linting:
    name: Lint Testing
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: read
      statuses: write

    steps:
      - name: Check-Out Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run GitHub Super-Linter
        continue-on-error: false
        uses: super-linter/super-linter@v6
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_JSON: true
          VALIDATE_MARKDOWN: true
          VALIDATE_POWERSHELL: true
          VALIDATE_YAML: true

  PSRule:
    name: Run PSRule Tests [Modules]
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Check-Out Repository
        uses: actions/checkout@v4

      - name: Run PSRule Validation
        continue-on-error: false
        uses: ./.github/actions/ps-rule
        with:
          option: 'ps-rule.yaml'
          bicepPath: 'src/modules'
          path: ${{ env.PSRULE_DIRECTORY }}

  build:
    name: Build
    runs-on: ubuntu-latest
    needs:
      - linting
      - PSRule
    steps:
      - name: Check-Out Repository
        uses: actions/checkout@v4

      - name: Bicep Build
        uses: Azure/cli@v1.0.7
        with:
          inlineScript: |
            az bicep build -f ./src/orchestration/main.bicep --stdout

      - name: Copy Files for Artifact Upload
        run: rsync -av --exclude='build' --exclude={'.vscode/','.ps-rule/','.ps-docs/','*.md'} ./. ./build
        working-directory: ${{ env.INFRA_WORKING_DIRECTORY }}

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: artifact
          path: ${{ env.INFRA_WORKING_DIRECTORY }}

  deploy_Prd:
    name: Deploy Production
    uses: ./.github/workflows/deploy.yml
    concurrency: 'deploy'
    needs:
      - build
    with:
      artifactName: artifact
      environmentName: 'prd'
      location: 'australiaeast'
      templateFile: ./src/orchestration/main.bicep
      templateParameterFile: ./src/configuration/parameters.bicepparam
      moduleName: 'landing-Zone-deployment'
    secrets:
      # Environment variables are not supported with caller workflows. You must use repository secrets.
      AZURE_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      AZURE_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      AZURE_TENANT_ID: ${{ secrets.ARM_TENANT_ID}}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
